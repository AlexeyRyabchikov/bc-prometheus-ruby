#!/usr/bin/env ruby
# frozen_string_literal: true

# Copyright (c) 2019-present, BigCommerce Pty. Ltd. All rights reserved
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
# documentation files (the "Software"), to deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit
# persons to whom the Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all copies or substantial portions of the
# Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
# WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
ENV['PROCESS'] = 'demo'
$LOAD_PATH.unshift File.expand_path('../../../lib', __FILE__)
require 'bigcommerce/prometheus'
require 'logger'
require_relative 'support'

logger = ::Logger.new(STDOUT)
logger.level = ::Logger::Severity::INFO

::Bigcommerce::Prometheus.configure do |c|
  c.server_port = 8_622
  c.server_host = '0.0.0.0'
  c.logger = logger
  c.puma_collection_frequency = 5
  c.web_collectors = [Demo::GeeseCollector]
  c.web_type_collectors = [Demo::GeeseTypeCollector.new]
end

server = ::Bigcommerce::Prometheus::Server.new
Bigcommerce::Prometheus.web_type_collectors.each do |tc|
  server.add_type_collector(PrometheusExporter::Server::ActiveRecordCollector.new)
  server.add_type_collector(PrometheusExporter::Server::WebCollector.new)
  server.add_type_collector(PrometheusExporter::Server::PumaCollector.new)
  server.add_type_collector(tc)
end
server.start_until_stopped do
  sleep 2
  ::Bigcommerce::Prometheus::Integrations::Puma.start
  Demo::GeeseCollector.start

  collector = Demo::GeeseCollector.new
  loop do
    collector.honk # ad hoc metric
    logger.info 'HONK!'
    sleep 3
  end
end
